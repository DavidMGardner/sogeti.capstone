@model Sogeti.Capstone.Web.ViewModel.EventViewModel

@{
    ViewBag.Title = "Schedule Event";
}

<h2>Schedule New Event</h2>
<br/>
<div class="landing-hero">
    <h1>Heading</h1>
    <p>Tagline</p>
    <p>
        <a class="btn btn-primary btn-large">
            Learn more
        </a>
    </p>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container well" style="background-color: whitesmoke; padding: 10px;">
        <div class="row control-group">
            <div class="col-sm-12 col-md-12 col-lg-12">
                @Html.Label("Event Name:", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Enter a title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-6 col-md-6 col-lg-6">
                @Html.Label("Date:", htmlAttributes: new { @class = "control-label", @style = "max-width: 188px" })
                <input class="form-control" type="date" name="Date" min=@DateTime.Now required />
                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-3 col-md-3 col-lg-3">
                @Html.Label("Start Time:", htmlAttributes: new { @class = "control-label" })
                <input class="form-control" type="time" name="StartTime" min=@DateTime.Now required="required" />
                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-3 col-md-3 col-lg-3">
                @Html.Label("End Time:", htmlAttributes: new { @class = "control-label" })
                <input class="form-control" type="time" name="EndTime" min=@DateTime.Now required="required" />
                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                @Html.Label("Location:", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.LocationInformation, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Type Location Information" } })
                @Html.ValidationMessageFor(model => model.LocationInformation, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                @Html.Label("Description:", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Type a Description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                @Html.Label("Logo Path:", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.LogoPath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogoPath, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="">

                <br/>
                @Html.Label("Registration Type:")
                @Html.DropDownList("chosenRegistrationType", new SelectList(ViewBag.RegistrationType, "Id", "Title"))
                <span></span>
                @Html.Label("Event Type:")
                @Html.DropDownList("chosenEventType", new SelectList(ViewBag.EventType, "Id", "Title"))<br/>
                <br/>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="pull-left col-sm-1 col-md-1 col-lg-1 ">
                @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
            </div>
            <div class="pull-right col-sm-11 col-md-11 col-lg-11 ">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}